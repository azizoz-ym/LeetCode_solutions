#My Solution
class Solution(object):
    def isPalindrome(self, x):
        if x < 0:
            return False
        else: 
            s = str(x)
            length = len(s)
            count = 0
            for i in range (0, length // 2):
                if (s[i] == s[length-1-i]):
                    count += 1
            if count == length // 2 :
                return True
            else:
                return False
                
        
#Other Solutions
#class Solution:
#    def isPalindrome(self, x):
#        number_1 = list(str(x))
#        number_2= number_1[::-1]
#        return number_1 == number_2


#Other Solutions
#class Solution:
#    def isPalindrome(self, x: int) -> bool:
#        x = str(x)
#        x_length = len(x) - 1
#        for i in range(len(x) // 2):
#            if x[i] != x[x_length - i]:
#                return False
#        return True

#Other Solutions
#class Solution:
#    def isPalindrome(self, x: int) -> bool:
#        s = str(x)
#        if s == s[::-1]:
#            return True
#        else:
#            return False


#Other Solutions
#One string solution faster than 95%
#class Solution:
#    def isPalindrome(self, x: int) -> bool:
#        return 0 if x < 0 else int(str(x)[::-1]) == x

#Other Solutions
#        for i in str(x):
#            res.append(i)
#        res.reverse()
#        s=s.join(res)
#        return (s==str(x))
